<?php

namespace app\merchant\controller;

use app\admin\model\MerchantIncom;
use app\merchant\model\MerchantShop;
use think\Controller;
use think\Exception;
use think\exception\DbException;
use think\Request;
use think\Session;

class Shop extends Controller
{

    public $url = 'http://sandbox.starpos.com.cn/emercapp';
    protected function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        Session::init([
            'prefix'         => 'module',
            'type'           => '',
            'auto_start'     => true,
        ]);
    }

    /**
     * 门店进件字段
     *
     * @return \think\Response
     */
    public function shop_incom(Request $request)
    {
        if ($request->isPost()) {
            /** @var  $param [int] 需包含商户ID */
            $param = $request->param();

            if (empty($param['id'])) {
                return false;
            }

            /* 储存所有字段到merchant_incom */
            $res = MerchantIncom::create($param);
            if ( !empty($res->toArray()['id']) ) {
                /** 储存成功发送星post进件 */
                $res = curl_request($this->url, true, $param, true);

                /** json转成数组 */
                $res = json_decode($res, true);
                $check = $this->check_sign_value($param['signValue'], $res);
                /** 根据返回参数返回消息并把结果存入数据库 */
                if ($check) {
                    //TODO
                }
            }
        }
    }

    /**
     * 显示当前商户门店
     *
     * @return \think\Response
     */
    public function shop_list(Request $request)
    {
        if ($request->isGet()) {
            $param['merchant_id'] = $request->param('id');
            $rows = MerchantShop::where("merchant_id={$param['merchant_id']}")->count("id");
            $pages = page($rows);
            $res['list'] = MerchantShop::where("merchant_id={$param['merchant_id']}")
                ->limit($pages['offset'], $pages['limit'])
                ->field("shop_name,stoe_adds,id")
                ->select();

            $res['pages']['rows'] = $rows;
            $res['pages'] = $pages;
            return (json_encode($res));

        }
    }

    /**
     *
     * @param [string] keywords  关键字 模糊搜索
     * @param  \think\Request  $request
     * @return \think\Response
     * @throws Exception DbException
     */
    public function search_shop(Request $request)
    {
        if ( $request->isPost() ) {
            $param = $request->param();
            /** 身份为商户 */
            $param['merchant_id'] = Session::get("merchant_id", "merchant");
            /** 身份为员工 */
            $param['user_id'] = Session::get("user_id", "merchant");
            $rows = MerchantShop::where([
                "merchant_id" => ["eq", $param['merchant_id']],
                "shop_name"   => ["LIKE", $param["keywords"]."%"]
            ])->count("id");
            $pages = page($rows);
            $res['list'] = MerchantShop::where([
                "merchant_id" => ["eq", $param['merchant_id']],
                "shop_name"   => ["LIKE", $param["keywords"]."%"]
            ])
                ->limit($pages['offset'], $pages['limit'])
                ->field("shop_name,stoe_adds")
                ->select();

            $res['pages']['rows'] = $rows;
            $res['pages'] = $pages;
            if (count($res['list']) < 1) {
                return_msg(400,"没有数据");
            }
            return (json_encode($res));


        }
    }

    /**
     * 显示门店详情
     * @param [int] $id 门店ID
     * @method GET
     * @param  int  $id
     * @return \think\Response
     */
    public function shop_detail(Request $request)
    {
        $param = $request->param();
        if ($request->isGet()) {
            $res = MerchantShop::where("id", $param["id"])->field([
                "shop_name","stoe_adds","stoe_cnt_tel","imgFile"
            ])->find();
            if (count($res->toArray()) > 0) {
                return_msg(200,"success", json_encode($res->toArray()));
            }
            //mark  没有门店评价表
        }
    }



    /**
     * 验证签名域是否正确
     * @param $old_sign
     * @param $res
     * @return bool
     * @return string
     */
    protected function check_sign_value($query_sign, Array $res)
    {
        if ($query_sign !== sign_ature(1111, $res)) {
            return_msg(400, "签名域不正确");

        } elseif ($res['msg_cd'] !== "000000") {
            return_msg(400, "操作失败!");
        } else {
            return true;
        }
    }
}
